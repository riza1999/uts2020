{"version":3,"sources":["webpack:///src/app/admin/edit/edit.page.html","webpack:///src/app/admin/edit/edit-routing.module.ts","webpack:///src/app/admin/edit/edit.module.ts","webpack:///src/app/admin/edit/edit.page.scss","webpack:///src/app/admin/edit/edit.page.ts"],"names":["routes","path","component","EditPageRoutingModule","imports","forChild","exports","EditPageModule","declarations","EditPage","activatedRoute","electroService","router","toastCtrl","paramMap","subscribe","has","itemId","parseInt","get","loadedItem","getItem","form","console","log","type","editGPU","id","value","brand","photoURL","model","price","stock","showAlertSucces","editCPU","baseclock","boostclock","core","thread","editRAM","speed","size","editMotherboard","chipset","forProc","create","message","color","duration","toast","present","navigate","selector","template"],"mappings":"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","file":"edit-edit-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/admin\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Edit Produk</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">URL Foto</ion-label>\\n        <ion-input type=\\\"url\\\" [(ngModel)]=\\\"loadedItem.photoURL\\\" name=\\\"photoURL\\\" #photoURLCtrl=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Nama brand</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"loadedItem.brand\\\" name=\\\"brand\\\" #nameCtrl=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Model</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"loadedItem.name\\\" name=\\\"model\\\" #brandCtrl=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Harga</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.price\\\" name=\\\"price\\\" #priceCtrl=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Stock</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.stock\\\" name=\\\"stock\\\" #stockCtrl=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <p class=\\\"ion-padding\\\" style=\\\"padding-bottom: 6px;\\\" [ngClass]=\\\"loadedItem.type ? (loadedItem.type != 'GPU' ? '' : 'ion-hide') : 'ion-hide'\\\">Detail produk</p>\\n    <ion-list [ngClass]=\\\"loadedItem.type == 'RAM' ? '' : 'ion-hide'\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Speed</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.speed\\\" name=\\\"speed\\\" #speedCtrl=\\\"ngModel\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Size</ion-label>\\n        <ion-select [(ngModel)]=\\\"loadedItem.size\\\" name=\\\"size\\\" #sizeCtrl=\\\"ngModel\\\">\\n          <ion-select-option value=\\\"Long Dimm\\\">Long Dimm</ion-select-option>\\n          <ion-select-option value=\\\"Short Dimm\\\">Short Dimm</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list>\\n    <ion-list [ngClass]=\\\"loadedItem.type == 'CPU' ? '' : 'ion-hide'\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Baseclock</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.baseclock\\\" name=\\\"baseclock\\\" #baseclockCtrl=\\\"ngModel\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Boostclock</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.boostclock\\\" name=\\\"boostclock\\\" #boostclockCtrl=\\\"ngModel\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Core</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.core\\\" name=\\\"core\\\" #coreCtrl=\\\"ngModel\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Thread</ion-label>\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"loadedItem.thread\\\" name=\\\"thread\\\" #threadCtrl=\\\"ngModel\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <ion-list [ngClass]=\\\"loadedItem.type == 'Motherboard' ? '' : 'ion-hide'\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Chipset</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"loadedItem.chipset\\\" name=\\\"chipset\\\" #chipsetCtrl=\\\"ngModel\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">For Processor</ion-label>\\n        <ion-select [(ngModel)]=\\\"loadedItem.forProc\\\"name=\\\"forProc\\\" #forProcCtrl=\\\"ngModel\\\">\\n          <ion-select-option value=\\\"Intel\\\">Intel</ion-select-option>\\n          <ion-select-option value=\\\"AMD\\\">AMD</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n      Edit\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPageRoutingModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2VkaXQvZWRpdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { ElectoService } from 'src/app/electro.service';\nimport { Item } from 'src/app/Model/Item.model';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n  loadedItem: Item;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private electroService: ElectoService,\n    private router: Router,\n    private toastCtrl: ToastController\n\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if(!paramMap.has('itemId')) {return ;}\n      const itemId = parseInt(paramMap.get('itemId'));\n      this.loadedItem = this.electroService.getItem(itemId);\n    });\n  }\n\n  onSubmit(form: NgForm){\n    console.log(form);\n    if(this.loadedItem.type == \"GPU\"){\n      this.electroService.editGPU(this.loadedItem.id,form.value.brand,form.value.photoURL,form.value.model,form.value.price,form.value.stock);\n      this.showAlertSucces()\n    }else if(this.loadedItem.type == \"CPU\"){\n      this.electroService.editCPU(this.loadedItem.id,form.value.brand,form.value.photoURL,form.value.model,form.value.price,form.value.stock,form.value.baseclock,form.value.boostclock,form.value.core,form.value.thread);\n      this.showAlertSucces()\n    }else if(this.loadedItem.type == \"RAM\"){\n      this.electroService.editRAM(this.loadedItem.id,form.value.brand,form.value.photoURL,form.value.model,form.value.price,form.value.stock,form.value.speed,form.value.size);\n      this.showAlertSucces()\n    }else if(this.loadedItem.type == \"Motherboard\"){\n      this.electroService.editMotherboard(this.loadedItem.id,form.value.brand,form.value.photoURL,form.value.model,form.value.price,form.value.stock,form.value.chipset,form.value.forProc);\n      this.showAlertSucces()\n    }\n  }\n\n  async showAlertSucces(){\n    const toast = await this.toastCtrl.create({\n      message: 'Item Edited',\n      color: 'primary',\n      duration: 2000\n    });\n    toast.present();\n\n    this.router.navigate(['/', 'admin']);\n  }\n\n}\n"]}